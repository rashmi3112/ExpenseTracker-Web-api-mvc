@model ExpenseTrackerMVC.Models.mvcExpenseModel
@{
    ViewBag.Title = "AddOrEdit Expense";
    Html.EnableClientValidation(true);
}

<div class="breadcrumb">
    <nav style="--bs-breadcrumb-divider: '>';" aria-label="breadcrumb">
        <ol class="breadcrumb">
            <li class="breadcrumb-item"><a href="@Url.Action("Index","Home")"><i class="fa-solid fa-house"></i></a></li>
            <li class="breadcrumb-item"><a href="@Url.Action("Index","Expense")">Expense</a></li>
            <li class="breadcrumb-item active" aria-current="page">Add or Update expense</li>
        </ol>
    </nav>
</div>


<div class="form-body">
    <h2 id="form-heading">Expense</h2>
    @using (Html.BeginForm())
    {
        @Html.HiddenFor(model => model.expenseId)
        <div class="form-group">
            @Html.Label("Title")
            @Html.EditorFor(model => model.title)
            @Html.ValidationMessageFor(model => model.title)
        </div>
        <div class="form-group">
            @Html.Label("Description")
            @Html.EditorFor(model => model.description)
            @Html.ValidationMessageFor(model => model.description)
        </div>
        <div class="form-group">
            @Html.Label("Amount")
            @Html.EditorFor(model => model.expense_amount)
            @Html.ValidationMessageFor(model => model.expense_amount)
        </div>
        <div class="form-group">
            @Html.Label("Date")
            @Html.EditorFor(model => model.date, new { htmlattributes = new { @class = "datepicker" } })
            @Html.ValidationMessageFor(model => model.date)
        </div>
        <div class="form-group">
            @Html.LabelFor(model => model.categoryId, "Category", htmlAttributes: new { @class = "control-label col-md-2" })
            <select name="categoryId" class="custom-select">
                @{
                    <option value="">Select category</option>
                    foreach (var item in ViewBag.category)
                    {
                        <option value="@item.categoryId" id="op">@item.categoryName</option>
                    }
                }
            </select>
            @Html.ValidationMessageFor(model => model.categoryId, "", new { @class = "text-danger" })
        </div>

        <div class="form-group">
            <input type="submit" value="Submit" class="btn button" id="submit" />
            <input type="reset" value="Reset" class="btn button" id="reset" />
        </div>

    }
</div>

<link href="~/Content/themes/base/jquery-ui.min.css" rel="stylesheet" />
<script src="https://kit.fontawesome.com/0b6b676505.js" crossorigin="anonymous"></script>
@section scripts{
    @Scripts.Render("~/bundles/jqueryval");
<script src="~/Scripts/jquery-ui-1.13.2.min.js"></script>
<script>
        $(function () {
            $(".datepicker").datepicker({
                changeMonth: true,
                changeYear: true,
                minDate: new Date(2022, 0, 1),
                maxDate: new Date(2040, 0, 1),
                showOn: 'both',
                buttonText: "..."
                });

        });
   
    function ValidateExp() {
            var AlertMessage = '@TempData["AlertMessage"]'
            if (AlertMessage != '')
                alertify.alert("Expense is exceeding the total limit set", function () {
                    alert.message('OK')
                });
    }

</script>
}


